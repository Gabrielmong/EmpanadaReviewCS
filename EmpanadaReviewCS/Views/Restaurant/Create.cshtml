@model EmpanadaReviewCS.Models.Restaurant


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    <form action="~/Restaurant/Save" method="post" class="restaurant-edit-container">


            <div class="review-edit-card">
                <div>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idRestaurant)
                </div>
                <div class="review-edit-item">
                    <div>
                        <div class="review-edit-item-label">
                            @Html.LabelFor(model => model.name)
                        </div>
                        <div class="review-edit-item-input">
                            @Html.EditorFor(model => model.name, "", new { @class = "review-edit-item-input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="review-edit-item">
                    <div>
                        <div class="review-edit-item-label">
                            @Html.LabelFor(model => model.description)
                        </div>
                        <div class="review-edit-item-input">
                            @Html.EditorFor(model => model.description, "", new { @class = "review-edit-item-input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="review-edit-item">
                    <div>
                        <div class="review-edit-item-label">
                            @Html.LabelFor(model => model.foodType)
                        </div>
                        <div class="review-edit-item-input">
                            @Html.EditorFor(model => model.foodType, "", new { @class = "review-edit-item-input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.foodType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="review-edit-item">
                    <div>
                        <div class="review-edit-item-label">
                            @Html.LabelFor(model => model.hasAllergies, htmlAttributes: new { @class = "control-label col-md-2" })
                        </div>
                        <div class="review-edit-item-input">
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.hasAllergies, new SelectList(new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "No", Value = "0" },
                                    new SelectListItem { Text = "Yes", Value = "1" }
                                }, "Value", "Text"), new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.hasAllergies, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @Html.ValidationMessageFor(model => model.hasAllergies, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="review-edit-item">
                    <div>
                        <div class="review-edit-item-label">
                            @Html.LabelFor(model => model.restrictions)
                        </div>
                        <div class="review-edit-item-input">
                            @Html.EditorFor(model => model.restrictions, "", new { @class = "review-edit-item-input" })
                        </div>
                        @Html.ValidationMessageFor(model => model.restrictions, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="review-edit-item">
                    <input type="submit" value="Save" class="review-edit-button" />
                </div>
            </div>
    </form>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
