@model EmpanadaReviewCS.Models.ViewModel.UserModel

@{
    ViewBag.Title = "Edit";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Edit</title>
</head>
<body>

    <div class="user-admin-container">
        <h4>Edit user info</h4>
        <hr />

        <form action="~/User/Edit" method="post" class="user-admin-card">
            <div class="user-admin-items">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.idUser)

                <div class="user-admin-item">
                    @Html.LabelFor(model => model.userName, new { @class = "user-admin-label" })
                    @Html.EditorFor(model => model.userName, "", new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
                </div>

                <div class="user-admin-item">
                    @Html.LabelFor(model => model.password, new { @class = "user-admin-label" })
                    @Html.PasswordFor(model => model.password, new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                </div>
                <div class="user-admin-item">
                    @Html.LabelFor(model => model.confirmPassword, new { @class = "user-admin-label" })
                    @Html.PasswordFor(model => model.confirmPassword, new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.confirmPassword, "", new { @class = "text-danger" })
                </div>
                <div class="user-admin-item">
                    @Html.LabelFor(model => model.firstName, new { @class = "user-admin-label" })
                    @Html.EditorFor(model => model.firstName, "", new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
                </div>
                <div class="user-admin-item">
                    @Html.LabelFor(model => model.lastName, new { @class = "user-admin-label" })
                    @Html.EditorFor(model => model.lastName, "", new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
                </div>
                <div class="user-admin-item">
                    @Html.LabelFor(model => model.bio, new { @class = "user-admin-label" })
                    @Html.EditorFor(model => model.bio, "", new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.bio, "", new { @class = "text-danger" })
                </div>
                <div class="user-admin-item">
                    @Html.LabelFor(model => model.email, new { @class = "user-admin-label" })
                    @Html.EditorFor(model => model.email, "", new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                </div>
                <div class="user-admin-item">
                    @Html.LabelFor(model => model.role, new { @class = "user-admin-label" })
                    @Html.EditorFor(model => model.role, "", new { @class = "user-admin-input" })
                    @Html.ValidationMessageFor(model => model.role, "", new { @class = "text-danger" })
                </div>

                <input type="submit" value="Save" class="user-admin-button" />

            </div>
        </form>
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
